<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">

	<!--  Turning on context annotations -->
	<context:annotation-config/>
	
	<!-- Spring will scan all packages and subpackages that start with "com" -->
	<context:component-scan base-package="com"/>
	
	<!-- Turning on tx annotations (Spring ORM) -->
	<tx:annotation-driven/>
	
	<!-- We NEED a SessionFAcotry to make the project function, HOWEVER the Session FActory has a dependency called "Datasource" -->
	
	<!-- DATASOURCE
			This bean is a JDBC instance 
			DataSource is an object that holds all atrributes necessary to connect to any database-->
			
			<bean id = "dataSource" class = "org.springframework.jdbc.datasource.DriverManagerDataSource">
				<property name="driverClassName" value = "org.postgresql.Driver"></property>
				<property name="url" value = "jdbc:postgresql://database-1.cqoseij0k35s.us-east-2.rds.amazonaws.com/postgres"></property>
				<property name="username" value = "postgres"></property>
				<property name="password" value = "password"></property>
			</bean>
			
	<!-- SESSIONFACTORY
			This bean is a Hibernate instance.
				Session Factory is an object that is responsible for creating Hibernate sessions. -->
				
				
			<bean id = "sessionFactory" class = "org.springframework.orm.hibernate5.LocalSessionFactoryBean">
				<property name="dataSource" ref = "dataSource"/>
				<property name="packagesToScan" value = "com.example.model"/>
				<property name = "hibernateProperties">
					<props>
						<prop key = "hibernate.show_sql">false</prop>
						<prop key = "hibernate.format_sql">false</prop>
						<prop key = "hibernate.hbm2ddl.auto">create</prop>
						<prop key = "hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>
					</props>
				</property>
			</bean>
			
	<!--  TRANSACTION MANAGER
			This bean is Hibernate instance 
			This bean is responsible for managing our transactions(big suprise)
				and also manages our contextual sessions.  
				
			What are contextual sessions? 
				Contextual session are generated by "getCurrentSession()". It provides a session object which is in hibernate context and managed by hibernate.
					It is bound to transaction scope. 
					
					.getCurrentSession() lcreates a session if none laready exists. The session is managed by Hibernate, so we don't need to flush it or close it. 
					(faster in a single threaded environment)
				-->
				
			<bean id="transactionManager" class = "org.springframework.orm.hibernate5.HibernateTransactionManager">
				<property name = "sessionFactory" ref = "sessionFactory"/>
			</bean>

</beans>
